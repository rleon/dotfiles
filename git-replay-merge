#!/bin/bash -e
# Mainly borrowed from https://raw.githubusercontent.com/jugglinmike/dotfiles/master/bin/git-replay-merge

if [[ "$1" == "-h" || "$1" == "--help" || "$1" == "" || "$2" == "" ]];
then
	echo "git replay-merge [merge SHA] [target branch]"
	exit 1
fi

function alt_version {
  local ref=$1
  local other_branch=$2
  local subject=$(git show --no-patch --format="%s" $ref)

  git log --format="%H" --grep "$subject" --fixed-strings $other_branch
}

function branch_base {
  local unique_commits=($(git log --format="%H" $2 ^$1))
  git rev-parse ${unique_commits[-1]}~
}

SHA=$1
TARGET_BR=$2

PARENTS=($(git show --no-patch --format="%P" $SHA))

BASE_BR=$(branch_base ${PARENTS[0]} ${PARENTS[1]})
FREE_PARENT=$(alt_version $BASE_BR $TARGET_BR)

git checkout --detach $FREE_PARENT
git cherry-pick -s ${PARENTS[0]}..${PARENTS[1]}

TMP_BR=$(git rev-parse HEAD)

git checkout $TARGET_BR
git merge --ff $TMP_BR
