[alias]
	st = status
	br = branch -v --sort=-committerdate
	rb = rebase -i
	rf = "!f() { git rebase -i $1~1;};f"
	co = checkout
	c = commit -s
	fp = format-patch -M --notes
	grpe = grep
	fixes = "!git --no-pager log --abbrev=12 -1 --format='Fixes: %h (\"%s\")'"
	fixup = commit -s --fixup
	rfixup = "!f() { git fixup $1 && git rf $1;};f"
	up = add --update
	l = log --oneline
	send-upstream = send-email --suppress-cc=bodycc --suppress-from --no-signed-off-by-cc
	send-report = "!f() { _REP=$(mktemp) && \
		echo \"From b8722f14e7ed81452f791764a26d2ed4cfa11478 Mon Sep 17 00:00:00 2001 \" > $_REP && \
		echo "" >> $_REP && cat $1 >> $_REP && \
		git send-email --envelope-sender=\"Leon Romanovsky <leonro@nvidia.com>\" \
			--from=\"Leon Romanovsky <leonro@nvidia.com>\" \
			--to=\"Jason Gunthorpe <jgg@nvidia.com>\" \
			--subject=\"weekly ${1%.*}\" \
			--force $_REP && \
		rm $_REP;};f"
	dirt = "!git config gerrit.createChangeId true && git set-name"
	undirt = "!git config gerrit.createChangeId false && git unset-name"
	set-name = config user.email leonro@nvidia.com
	unset-name = config user.email leon@kernel.org
	undo = reset --hard
	reword = commit --amend --allow-empty
	update = "!git reword --no-edit"
	upfix = "!git up && git update && git checkpatch"
	rgrep = "!f() { git grep $1 drivers/infiniband/ include/rdma/ include/uapi/rdma/;};f"
	lgrep = "!f() { git grep $1 drivers/infiniband/ include/rdma/ include/uapi/rdma/ drivers/net/ethernet/mellanox/ include/linux/mlx4/ include/linux/mlx5/;};f"
	numstat = log -M --oneline --numstat --no-merges
	count = rev-list --count --no-merges
	cumulutive = diff -M --dirstat=2,cumulative
	stat = shortlog --no-merges -e -s -n
	# Find merge commit which include specific commit
	find-merge = "!sh -c 'commit=$0 && branch=${1:-HEAD} && (git rev-list $commit..$branch --ancestry-path | cat -n; git rev-list $commit..$branch --first-parent | cat -n) | sort -k2 -s | uniq -f1 -d | sort -n | tail -1 | cut -f2'"
	# See the details of merge commit returned by find-merge
	show-merge = "!sh -c 'merge=$(git find-merge $0 $1) && [ -n \"$merge\" ] && git show $merge'"
	# Find root of source directory
	root = rev-parse --show-toplevel
	rob = "!f() { git --no-pager log -1 --pretty='Reviewed-by: %aN <%ae>' --author=$1;};f"
	ty = "!f() { $HOME/src/b4/b4.sh ty ${@:1};};f"
	shazam = "!f() { $HOME/src/b4/b4.sh shazam -l -s ${@:1} && git ty -d all;};f"

